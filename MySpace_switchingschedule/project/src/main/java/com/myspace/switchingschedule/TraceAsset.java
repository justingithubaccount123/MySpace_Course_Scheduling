package com.myspace.switchingschedule;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class TraceAsset implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	public static final String UP = "Up";
	public static final String DOWN = "Down";

	@org.kie.api.definition.type.Label("Trace Path representing a single branch of the tree")
	private int path;
	@org.kie.api.definition.type.Label("Sequence (i.e. the order of the assets ) within a path for a given direction.")
	private int seq;
	@org.kie.api.definition.type.Label("NOTE: may not be required as its an attribue of the Asset")
	private String direction; // Up, Down
	@org.kie.api.definition.type.Label("Original & Changed State, if changed by a rule, of the Asset (e.g. Open. Close)")
	private String state;
	@org.kie.api.definition.type.Label("REDUNDANT with original 'state'. When the current state is changed the previous current state is copied here so the state can be revered back to its normal state.")
	private String prevState; // State it was in before it was changed. Null
								// (no change) Open, Close
	@org.kie.api.definition.type.Label("Indicator that the Asset has been Checked and Tragged")
	private boolean tagged; // State it was in before it was changed. Null (no
							// change) Open, Close

	@org.kie.api.definition.type.Label("All the Asset detailes (location, type, group, etc)")
	public com.myspace.switchingschedule.Asset asset;

	public TraceAsset() {
	}

	public int getSeq() {
		return seq;
	}
	public void setSeq(int seq) {
		this.seq = seq;
	}
	public String getDirection() {
		return direction;
	}
	public void setDirection(String direction) {
		this.direction = direction;
	}
	public String getState() {
		return state;
	}
	public void setState(String state) {
		this.state = state;
	}
	public String getStateAction() {
		if (state.equals(StateAction.OPENED)) {
			return "OPEN";
		} else if (state.equals(StateAction.CLOSED)) {
			return "CLOSE";
		} else {
			return state;
		}
	}
 
	public String getPrevState() {
		return prevState;
	}
	public void setPrevState(String prevState) {
		this.prevState = prevState;
	}
	
	public String getPrevStateAction() {
		if (prevState.equals(StateAction.OPENED)) {
			return "OPEN";
		} else if (prevState.equals(StateAction.CLOSED)) {
			return "CLOSE";
		} else {
			return state;
		}
	}
	
	public boolean isTagged() {
		return tagged;
	}
	public void setTagged(boolean tagged) {
		this.tagged = tagged;
	}
	@Override
	public String toString() {
		return "IsolationPoint [path=" + path + ", assetId=" + asset.getId()
				+ ", location=" + asset.getLocation() + ", direction="
				+ direction + ", state=" + state + ", prevState="
				+ prevState + ", tagged=" + tagged + "]";
	}

	public com.myspace.switchingschedule.Asset getAsset() {
		return this.asset;
	}

	public void setAsset(com.myspace.switchingschedule.Asset asset) {
		this.asset = asset;
	}

	public int getPath() {
		return this.path;
	}

	public void setPath(int path) {
		this.path = path;
	}

	public TraceAsset(int path, int seq, 
			java.lang.String direction, java.lang.String state,
			java.lang.String prevState, boolean tagged,
			com.myspace.switchingschedule.Asset asset) {
		this.path = path;
		this.seq = seq;
		this.direction = direction;
		this.state = state;
		this.prevState = prevState;
		this.tagged = tagged;
		this.asset = asset;
	}

}